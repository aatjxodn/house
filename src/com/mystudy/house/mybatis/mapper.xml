<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="house">

<select id="findOrderNum" parameterType="map" resultType="String">
SELECT ORDER_NUM FROM ORDER_PRODUCT WHERE ID = #{id} AND PRODUCT_NUM = #{productNum}
</select>

<!-- MembersDAO -->
<!-- 로그인 -->
<select id="login" parameterType="membersVO" resultType="membersVO">
SELECT * FROM MEMBERS WHERE ID = #{id} AND PW = #{pw}
</select>
<!-- 아이디 찾기 -->
<select id="findId" parameterType="membersVO" resultType="String">
SELECT ID FROM MEMBERS WHERE NAME = #{name} AND PHONE = #{phone} 
</select>
<!-- 회원정보 조회 -->
<select id="showInfo" parameterType="String" resultType="membersVO">
SELECT * FROM MEMBERS WHERE ID = #{id}
</select>
<!-- 회원정보 수정 -->
<update id="editInfo" parameterType="membersVO">
UPDATE MEMBERS SET NAME = #{name}, EMAIL = #{email}, ADDR = #{addr}, ADDR_DETAIL = #{addrDetail}, PHONE = #{phone} WHERE ID = #{id}
</update>
<!-- 프로필 이미지 변경 -->
<update id="changeProfileImg">
UPDATE MEMBERS SET PROFILE_IMG = #{profileImg} WHERE ID = #{id}
</update>
<!-- 비밀번호 변경 -->
<update id="changepw" parameterType="membersVO">
UPDATE MEMBERS SET PW = #{pw} WHERE ID = #{id}
</update>
<!--  회원가입 -->
<insert id="signup" parameterType="membersVO">
INSERT INTO MEMBERS (ID, PW, NAME, EMAIL, ADDR, ADDR_DETAIL, PHONE) VALUES 
(#{id}, #{pw}, #{name}, #{email}, #{addr}, #{addrDetail}, #{phone})
</insert>
<!-- 회원 탈퇴 -->
<delete id="withdraw" parameterType="String">
DELETE FROM MEMBERS WHERE ID = #{id}
</delete>
<!-- PartnerDAO -->
<!-- 판매자 신청 -->
<insert id="registerPartner" parameterType="partnerVO">
INSERT INTO PARTNER (PARTNER_NUM, ID, COMPANY_NAME, COMPANY_OWNER_NAME, COMPANY_ADDR, COMPANY_ADDR_DETAIL, COMPANY_PHONE, COMPANY_EMAIL, CRN, SHIPPING) VALUES 
(PARTNER_SEQ.NEXTVAL, #{id}, #{companyName}, #{companyOwnerName}, #{companyAddr}, #{companyAddrDetail}, #{companyPhone}, #{companyEmail}, #{crn}, #{shipping})
</insert>
<!-- KnowhowDAO -->
<!-- 전체 게시글 개수 구하기 -->
<select id="getTotalKnowhowCount" resultType="int">
SELECT COUNT(*) AS CNT FROM VW_KNOWHOW
</select>
<!-- 카테고리별 전체 게시글 개수 구하기 -->
<select id="getTotalKnowhowCountbyCategory" parameterType="String" resultType="int">
SELECT COUNT(*) AS CNT FROM VW_KNOWHOW WHERE CATEGORY = #{category}
</select>
<!-- 노하우 전체 조회: 최근인기순 -->
<select id="showAllKnowhow1" parameterType="map" resultType="knowhowVO">
SELECT * FROM
(SELECT ROWNUM R_NUM, 
K.* FROM (SELECT * FROM VW_KNOWHOW
ORDER BY CURRENT_LIKE_CNT DESC) K
) WHERE R_NUM BETWEEN #{begin} AND #{end}
</select>
<!-- 노하우 전체 조회: 역대인기순 -->
<select id="showAllKnowhow2" parameterType="map" resultType="knowhowVO">
SELECT * FROM
(SELECT ROWNUM R_NUM, 
K.* FROM (SELECT * FROM VW_KNOWHOW 
ORDER BY LIKE_CNT DESC) K
) WHERE R_NUM BETWEEN #{begin} AND #{end}
</select>
<!-- 노하우 전체 조회: 최신순 -->
<select id="showAllKnowhow3" parameterType="map" resultType="knowhowVO">
SELECT * FROM
(SELECT ROWNUM R_NUM, 
K.* FROM (SELECT * FROM VW_KNOWHOW 
ORDER BY REGDATE DESC) K
) WHERE R_NUM BETWEEN #{begin} AND #{end}
</select>
<!-- 노하우 전체 조회: 과거순 -->
<select id="showAllKnowhow4" parameterType="map" resultType="knowhowVO">
SELECT * FROM
(SELECT ROWNUM R_NUM, 
K.* FROM (SELECT * FROM VW_KNOWHOW 
ORDER BY REGDATE) K
) WHERE R_NUM BETWEEN #{begin} AND #{end}
</select>
<!-- 카테고리별 노하우 조회: 최근인기순 -->
<select id="showKnowhow1" parameterType="map" resultType="knowhowVO">
SELECT * FROM
(SELECT ROWNUM R_NUM, 
K.* FROM (SELECT * FROM VW_KNOWHOW 
WHERE CATEGORY = #{category}
ORDER BY CURRENT_LIKE_CNT DESC) K
) WHERE R_NUM BETWEEN #{begin} AND #{end}
</select>
<!-- 카테고리별 노하우 조회: 역대인기순 -->
<select id="showKnowhow2" parameterType="map" resultType="knowhowVO">
SELECT * FROM
(SELECT ROWNUM R_NUM, 
K.* FROM (SELECT * FROM VW_KNOWHOW 
WHERE CATEGORY = #{category}
ORDER BY LIKE_CNT DESC) K
) WHERE R_NUM BETWEEN #{begin} AND #{end}
</select>
<!-- 카테고리별 노하우 조회: 최신순 -->
<select id="showKnowhow3" parameterType="map" resultType="knowhowVO">
SELECT * FROM
(SELECT ROWNUM R_NUM, 
K.* FROM (SELECT * FROM VW_KNOWHOW 
WHERE CATEGORY = #{category}
ORDER BY REGDATE DESC) K
) WHERE R_NUM BETWEEN #{begin} AND #{end}
</select>
<!-- 카테고리별 노하우 조회: 과거순 -->
<select id="showKnowhow4" parameterType="map" resultType="knowhowVO">
SELECT * FROM
(SELECT ROWNUM R_NUM, 
K.* FROM (SELECT * FROM VW_KNOWHOW 
WHERE CATEGORY = #{category}
ORDER BY REGDATE) K
) WHERE R_NUM BETWEEN #{begin} AND #{end}
</select>
<!-- 노하우 작성 -->
<insert id="writeKnowhow" parameterType="knowhowVO">
INSERT INTO KNOWHOW
(KNOWHOW_IDX, ID, SUBJECT, CONTENT, CATEGORY, THUMBNAIL )
VALUES (KNOWHOW_SEQ.NEXTVAL, #{id}, #{subject}, #{content}, #{category}, #{thumbnail})
</insert>
<!-- 노하우 수정 -->
<update id="editKnowhow" parameterType="knowhowVO">
UPDATE KNOWHOW SET CATEGORY = #{category}, CONTENT = #{content}, SUBJECT=#{subject} WHERE KNOWHOW_IDX = #{knowhowIdx}
</update>
<!-- 노하우 상세 조회 -->
<select id="showKnowhowDetail" parameterType="String" resultType="knowhowVO">
SELECT * FROM VW_KNOWHOW WHERE KNOWHOW_IDX = #{idx}
</select>
<!-- 노하우 조회수 증가 -->
<update id="addKnowhowViews" parameterType="String">
UPDATE KNOWHOW SET VIEWS = (SELECT VIEWS + 1 FROM KNOWHOW WHERE KNOWHOW_IDX = #{idx}) WHERE KNOWHOW_IDX = #{idx}
</update>
<!-- 노하우 좋아요 여부 확인 -->
<select id="confirmknowlike" parameterType="knowlikeVO" resultType="String">
SELECT LIKE_NUM FROM KNOWLIKE WHERE KNOWHOW_IDX = #{knowhowIdx} AND ID = #{id}
</select>
<!-- 노하우 좋아요 -->
<insert id="likeKnowhow" parameterType="knowlikeVO">
INSERT INTO KNOWLIKE (LIKE_NUM, KNOWHOW_IDX, ID) VALUES (KNOWLIKE_SEQ.NEXTVAL, #{knowhowIdx}, #{id})
</insert>
<!-- 노하우 스크랩 여부 확인 -->
<select id="confirmknowscrap" parameterType="knowscrapVO" resultType="String">
SELECT SCRAP_NUM FROM MYSCRAP WHERE POST_IDX = #{knowhowIdx} AND ID = #{id} AND POST_TYPE = 1
</select>
<!-- 노하우 스크랩 -->
<insert id="scrapKnowhow" parameterType="knowscrapVO">
INSERT INTO MYSCRAP (SCRAP_NUM, POST_IDX, ID, POST_TYPE) VALUES (SCRAP_SEQ.NEXTVAL, #{knowhowIdx}, #{id}, 1)
</insert>
<!-- 노하우 스크랩 삭제 -->
<delete id="deleteKnowhowScrap" parameterType="String">
DELETE FROM MYSCRAP WHERE SCRAP_NUM = #{num}
</delete>
<!-- 노하우 삭제 -->
<delete id="deleteKnowhow" parameterType="String">
DELETE FROM KNOWHOW WHERE KNOWHOW_IDX = #{idx}
</delete>
<!-- 노하우 댓글 조회 -->
<select id="showKnowhowComments" parameterType="String" resultType="knowcommentVO">
SELECT * FROM VW_KNOWCOMMENT WHERE KNOWHOW_IDX = #{idx}
</select>
<!-- 노하우 대댓글 조회 -->
<select id="showKnowhowReply" parameterType="String" resultType="knowcommentVO">
SELECT * FROM VW_KNOWCOMMENT2 WHERE KNOWHOW_IDX IN (
SELECT KNOWCOM_IDX FROM KNOWCOMMENT WHERE KNOWHOW_IDX = #{idx})
</select>
<!-- 노하우 댓글 작성 -->
<insert id="writeKnowhowComment" parameterType="knowcommentVO">
INSERT INTO KNOWCOMMENT (KNOWCOM_IDX, KNOWHOW_IDX, CONTENT, ID)
 VALUES (KNOWCOMMENT_SEQ.NEXTVAL, #{knowhowIdx}, #{content}, #{id})
</insert>
<!-- 노하우 대댓글 작성 -->
<insert id="writeKnowhowComment2" parameterType="knowcommentVO">
INSERT INTO KNOWCOMMENT2 (COM_IDX, KNOWCOM_IDX, COMMENTS, ID)
 VALUES (KNOWCOMMENT2_SEQ.NEXTVAL, #{knowhowIdx}, #{content}, #{id})
</insert>
<!-- 노하우 대댓글 삭제 -->
<delete id="deleteKnowhowComment2" parameterType="String">
DELETE FROM KNOWCOMMENT2 WHERE COM_IDX = #{idx}
</delete>
<!-- 노하우 댓글 삭제 -->
<delete id="deleteKnowhowComment">
DELETE FROM KNOWCOMMENT WHERE KNOWCOM_IDX = #{idx}
</delete>
<!-- 노하우 제목 검색 -->
<select id="searchKnowhowbySubject" parameterType="String" resultType="knowhowVO">
SELECT * FROM VW_KNOWHOW WHERE SUBJECT LIKE #{subject}
</select>
<!-- 노하우 내용 검색 -->
<select id="searchKnowhowbyContent" parameterType="String" resultType="knowhowVO">
SELECT * FROM VW_KNOWHOW WHERE CONTENT LIKE #{content}
</select>
<!-- 노하우 작성자 검색 -->
<select id="searchKnowhowbyId" parameterType="String" resultType="knowhowVO">
SELECT * FROM VW_KNOWHOW WHERE ID = #{id}
</select>
<!-- PictureDAO -->
<!-- 사진글 작성 -->
<insert id="writePicture" parameterType="pictureVO">
INSERT INTO PICTURE (PICTURE_IDX, ID, CONTENT, RESIDENCE, SPACE, SIZES, STYLE, THUMBNAIL) VALUES 
(PICTURE_SEQ.NEXTVAL, #{id}, #{content}, #{residence}, #{space}, #{sizes}, #{style}, #{thumbnail})
</insert>
<!-- 사진글 조회: 최신순 -->
<select id="showPicture0" parameterType="map" resultType="int">
SELECT COUNT(*) FROM VW_PICTURE
WHERE RESIDENCE = ${residence} AND SPACE = ${space} AND SIZES = ${sizes} AND STYLE = ${style}
ORDER BY REGDATE DESC
</select>
<!-- 사진글 조회: 최근 인기순 -->
<select id="showPicture1" parameterType="map" resultType="int">
SELECT COUNT(*) FROM VW_PICTURE
WHERE RESIDENCE = ${residence} AND SPACE = ${space} AND SIZES = ${sizes} AND STYLE = ${style}
ORDER BY CURRENT_LIKE_CNT DESC
</select>
<!-- 사진글 조회: 역대 인기순 -->
<select id="showPicture2" parameterType="map" resultType="int">
SELECT COUNT(*) FROM VW_PICTURE
WHERE RESIDENCE = ${residence} AND SPACE = ${space} AND SIZES = ${sizes} AND STYLE = ${style}
ORDER BY LIKE_CNT DESC
</select>
<!-- 사진글 페이징 조회: 최신순 -->
<select id="showPicturePaging0" parameterType="map" resultType="pictureVO">
SELECT * FROM 
(SELECT ROWNUM R_NUM, 
K.* FROM (SELECT * FROM VW_PICTURE
WHERE RESIDENCE = ${residence} AND SPACE = ${space} AND SIZES = ${sizes} AND STYLE = ${style}
ORDER BY REGDATE DESC) K
) WHERE R_NUM BETWEEN #{begin} AND #{end}
</select>
<!-- 사진글 페이징 조회: 최근 인기순 -->
<select id="showPicturePaging1" parameterType="map" resultType="pictureVO">
SELECT * FROM
(SELECT ROWNUM R_NUM,
K.* FROM (SELECT * FROM VW_PICTURE
WHERE RESIDENCE = ${residence} AND SPACE = ${space} AND SIZES = ${sizes} AND STYLE = ${style}
ORDER BY CURRENT_LIKE_CNT DESC) K
) WHERE R_NUM BETWEEN #{begin} AND #{end}
</select>
<!-- 사진글 페이징 조회: 역대 인기순 -->
<select id="showPicturePaging2" parameterType="map" resultType="pictureVO">
SELECT * FROM 
(SELECT ROWNUM R_NUM, 
K.* FROM (SELECT * FROM VW_PICTURE
WHERE RESIDENCE = ${residence} AND SPACE = ${space} AND SIZES = ${sizes} AND STYLE = ${style}
ORDER BY LIKE_CNT DESC) K
) WHERE R_NUM BETWEEN #{begin} AND #{end}
</select>
<!-- 사진글 상세 조회 -->
<select id="showPictureDetail" parameterType="String" resultType="pictureVO">
SELECT PICTURE_IDX, ID, CONTENT, REGDATE, VIEWS, THUMBNAIL, RESIDENCE, SPACE, SIZES, STYLE, SCRAP_CNT, C1_CNT, C2_CNT, LIKE_CNT, PROFILE_IMG, LASTEST_CO_PROFILEIMG, LASTEST_CO_ID, LASTEST_CO_CONTENT FROM VW_PICTURE WHERE PICTURE_IDX = #{idx}
</select>
<!-- 사진글 조회수 증가 -->
<update id="addPictureViews" parameterType="String">
UPDATE PICTURE SET VIEWS = (SELECT VIEWS + 1 FROM PICTURE WHERE PICTURE_IDX = #{idx}) WHERE PICTURE_IDX = #{idx}
</update>
<!-- 사진글 좋아요 여부 확인 -->
<select id="confirmpiclike" parameterType="piclikeVO" resultType="String">
SELECT LIKE_NUM FROM PICLIKE WHERE PICTURE_IDX = #{pictureIdx} AND ID = #{id}
</select>
<!-- 사진글 좋아요 -->
<insert id="likePicture" parameterType="piclikeVO">
INSERT INTO PICLIKE (LIKE_NUM, PICTURE_IDX, ID) VALUES (PICLIKE_SEQ.NEXTVAL, #{pictureIdx}, #{id})
</insert>
<!-- 사진글 스크랩 여부 확인 -->
<select id="confirmpicscrap" parameterType="picscrapVO" resultType="String">
SELECT SCRAP_NUM FROM MYSCRAP WHERE POST_IDX = #{pictureIdx} AND ID = #{id} AND POST_TYPE = 0
</select>
<!-- 사진글 스크랩 -->
<insert id="scrapPicture" parameterType="picscrapVO">
INSERT INTO MYSCRAP (SCRAP_NUM, POST_IDX, ID, POST_TYPE) VALUES (SCRAP_SEQ.NEXTVAL, #{pictureIdx}, #{id}, 0)
</insert>
<!-- 사진글 스크랩 삭제 -->
<delete id="deletePictureScrap" parameterType="String">
DELETE FROM MYSCRAP WHERE SCRAP_NUM = #{num}
</delete>
<!-- 사진글 삭제 -->
<delete id="deletePicture" parameterType="String">
DELETE FROM PICTURE WHERE PICTURE_IDX = #{idx}
</delete>
<!-- 사진글 댓글 조회 -->
<select id="showPictureComments" parameterType="String" resultType="piccommentVO">
SELECT * FROM VW_PICCOMMENT WHERE PICTURE_IDX = #{idx}
</select>
<!-- 사진글 대댓글 조회 -->
<select id="showPictureReply" parameterType="String" resultType="piccommentVO">
SELECT * FROM VW_PICCOMMENT2 WHERE PICTURE_IDX IN (
SELECT PICCOM_IDX FROM PICCOMMENT WHERE PICTURE_IDX = #{idx})
</select>
<!-- 사진글 댓글 작성 -->
<insert id="writePictureComment" parameterType="piccommentVO">
INSERT INTO PICCOMMENT (PICCOM_IDX, PICTURE_IDX, CONTENT, ID)
 VALUES (PICCOMMENT_SEQ.NEXTVAL, #{pictureIdx}, #{content}, #{id})
</insert>
<!-- 사진글 대댓글 작성 -->
<insert id="writePictureComment2" parameterType="piccommentVO">
INSERT INTO PICCOMMENT2 (COM_IDX, PICCOM_IDX, COMMENTS, ID)
 VALUES (PICCOMMENT2_SEQ.NEXTVAL, #{pictureIdx}, #{content}, #{id})
</insert>
<!-- 사진글 대댓글 삭제 -->
<delete id="deletePictureComment2" parameterType="String">
DELETE FROM PICCOMMENT2 WHERE COM_IDX = #{idx}
</delete>
<!-- 사진글 댓글 삭제 -->
<delete id="deletePictureComment">
DELETE FROM PICCOMMENT WHERE PICCOM_IDX = #{idx}
</delete>
<!-- 사진글 수정 -->
<update id="editPicture" parameterType="pictureVO">
UPDATE PICTURE SET CONTENT = #{content}, RESIDENCE = #{residence}, STYLE = #{style}, SPACE = #{space}, SIZES = #{sizes} WHERE PICTURE_IDX = #{pictureIdx}
</update>
<!-- 사진글 내용 검색 -->
<select id="searchPicturebyContent" parameterType="String" resultType="pictureVO">
SELECT * FROM VW_PICTURE WHERE CONTENT LIKE #{content}
</select>
<!-- 사진글 작성자 검색 -->
<select id="searchPicturebyId" parameterType="String" resultType="pictureVO">
SELECT * FROM VW_PICTURE WHERE ID = #{id}
</select>

<!-- 여기까지 나 -->

<!-- 태우님 시작 -->

<!-- 고객센터 inquiry 입력 -->
<insert id="insert_inquiry" parameterType="HouseVO">
INSERT INTO INQUIRY
	(INQUIRY_IDX, ID, SUBJECT, REGDATE, COMMENTS, NAME, EMAIL, FILENAME, ORINAME)
VALUES (INQ_SEQ.NEXTVAL, #{id}, #{subject}, SYSDATE, #{comments}, #{name}, #{email}, #{fileName}, #{oriName})
</insert>


<!--  ===========================request============================== -->
<!-- request 게시글 번호, 제목, 좋아요, 조회수 조회 -->
<!-- 페이지에 해당하는 게시글 조회 request-->
<select id="list" resultType="RequestVO" parameterType="map" >
	SELECT *
   	  FROM (SELECT ROW_NUMBER() OVER (ORDER BY REQUEST_IDX DESC) AS R_NUM,
    		 R.* FROM (SELECT *
    					  FROM REQUEST
     			  					 ORDER BY REQUEST_IDX ASC
            			) R  
      		) WHERE R_NUM BETWEEN #{begin} AND #{end}	
</select>
	
<!-- 전체 게시글 갯수 조회 -->
<select id="totalCount" resultType="int">
	SELECT COUNT(*) AS CNT FROM REQUEST
</select>
<!-- request 게시글 추가 -->
<insert id="insert_request" parameterType="RequestVO">
	INSERT INTO REQUEST
	       (REQUEST_IDX, ID, SUBJECT, REGDATE, VIEWS, COMMENTS, FILENAME, ORINAME)
    VALUES (REQ_SEQ.NEXTVAL, #{id}, #{subject}, SYSDATE, 0, #{comments}, #{fileName}, #{oriName})
</insert>
	
<!-- request 검색 요청 -->
<!-- 동적검색 : 제목, 아이디 -->
<select id="search" parameterType="map" resultType="RequestVO">
	SELECT * 
		FROM REQUEST
<choose>
<when test="idx == 0">
	WHERE SUBJECT = INITCAP(#{keyword})
</when>
<when test="idx == 1">
	WHERE ID = #{keyword}
</when>
<otherwise>
	WHERE 1 = 2
</otherwise>
</choose> 
	ORDER BY REQUEST_IDX
</select>
<!-- request 좋아요 개수 확인 -->
<select id="requestLikeCnt" parameterType="String" resultType="int">
	SELECT COUNT(*) FROM REQUEST_LIKE WHERE REQUEST_IDX = #{requestIdx}
</select>
<!-- request 좋아요 여부 확인 -->
<select id="confirmRequestlike" parameterType="RequestLikeVO" resultType="String">
	SELECT LIKE_NUM FROM REQUEST_LIKE WHERE REQUEST_IDX = #{requestIdx} AND ID = #{id}
</select>
<!-- request 좋아요 -->
<insert id="likeRequest" parameterType="RequestLikeVO">
	INSERT INTO REQUEST_LIKE (LIKE_NUM, REQUEST_IDX, ID) VALUES (REQ_LIKE_SEQ.NEXTVAL, #{requestIdx}, #{id})
</insert>
	
	
<!-- request 수정 -->
<update id="update_request" parameterType="RequestVO">
	UPDATE REQUEST
		SET SUBJECT = #{subject},
			COMMENTS = #{comments},
			FILENAME = #{fileName}
	WHERE REQUEST_IDX = #{requestIdx}
</update>

<!-- request 삭제 -->
<delete id="delete_request" parameterType="String">
	DELETE FROM REQUEST WHERE REQUEST_IDX = #{requestIdx}
</delete>
	
<!-- request 조회수 -->
<update id="REQUESTVIEWS" parameterType="String">
	UPDATE REQUEST SET VIEWS = (SELECT VIEWS + 1 FROM REQUEST WHERE REQUEST_IDX = #{requestIdx}) WHERE REQUEST_IDX = #{requestIdx}
</update>

<!-- ====== 댓글 데이터 처리 ========== -->
<!-- 게시글에 딸린 댓글 데이터 조회 -->
<select id="commList" resultType="Request_comVO" parameterType="int">
SELECT COM_IDX, REQUEST_IDX, ID, REGDATE, COMMENTS
	FROM REQUEST_COM
WHERE REQUEST_IDX = #{requestIdx}
ORDER BY REGDATE DESC
</select>
	
<!-- request 추가 -->	
<insert id="Request_comment_insert" parameterType="Request_comVO">
INSERT INTO REQUEST_COM (COM_IDX, REQUEST_IDX, ID, REGDATE, COMMENTS)
	VALUES (REQ_COM_SEQ.NEXTVAL,#{requestIdx}, #{id}, SYSDATE, #{comments})
</insert>
<!-- request 삭제 -->	
<delete id="delete_request_comment" parameterType="String">
	DELETE FROM REQUEST_COM WHERE COM_IDX = #{comIdx}
</delete>
	
<!-- =======================REVIEWS========================================= -->
	
<!-- 페이지에 해당하는 게시글 조회 reviews-->
<select id="list2" resultType="ReviewsVO" parameterType="map" >
SELECT *
  FROM (SELECT ROW_NUMBER() OVER (ORDER BY IDX DESC) AS R_NUM,
	 R.* FROM (SELECT *
				  FROM REVIEWS
     					 ORDER BY IDX ASC
            	) R  
      	 ) WHERE R_NUM BETWEEN #{begin} AND #{end}	
</select>
	
<!--  review 추가 -->
<insert id="insert_reviews" parameterType="ReviewsVO">
INSERT INTO REVIEWS (IDX, REGDATE, COMMENTS, STAR, FILENAME, ORINAME, ID)
	VALUES (REV_SEQ.NEXTVAL, SYSDATE, #{comments}, #{star}, #{fileName}, #{oriName}, #{id})
</insert>

<!-- 전체 게시글 갯수 조회 -->
<select id="totalCount2" resultType="int">
	SELECT COUNT(*) AS CNT FROM REVIEWS
</select>

<!-- reviews 평점 만들기 -->	
<select id="avg1" resultType="int">
	SELECT AVG(STAR) AS AVG FROM REVIEWS
</select>
<!-- reviews 데이터 삭제 -->	
<delete id="reviews_delete" parameterType="String">
	DELETE FROM REVIEWS WHERE IDX = #{idx}
</delete>
<!-- reviews 데이터 수정 -->	
<update id="reviews_update" parameterType="ReviewsVO">
	UPDATE REVIEWS
		SET IDX = #{idx},
			REGDATE = SYSDATE,
			COMMENTS = #{comments},
			STAR = #{star},
			FILENAME = #{fileName}
		WHERE IDX = #{idx}
</update>
	

<!-- =================================PRODUCTINQUIRY=============================== -->
	
<!-- 페이지에 해당하는 게시글 조회 ProductInquiry-->
<select id="list3" resultType="ProductInquiryVO" parameterType="map" >
SELECT *
	  FROM (SELECT ROW_NUMBER() OVER (ORDER BY PROIN_IDX DESC) AS R_NUM,
    			 R.* FROM (SELECT *
      						  FROM PRODUCTINQUIRY
     								 ORDER BY PROIN_IDX ASC
            				) R  
      		) WHERE R_NUM BETWEEN #{begin} AND #{end}	
</select>
	
<!-- PRODUCTINQUIRY 전체 게시글 갯수 조회 -->
<select id="totalCount3" resultType="int">
	SELECT COUNT(*) AS CNT FROM PRODUCTINQUIRY
</select>
	
<!--  insert_productInquiry 추가 -->
<insert id="insert_productInquiry" parameterType="ProductInquiryVO">
INSERT INTO PRODUCTINQUIRY (PROIN_IDX, ID, PRODUCT_NUM, REGDATE, COMMENTS, FILENAME, ORINAME)
	VALUES (PRODUCTINQUIRY_SEQ.NEXTVAL, #{id}, #{productNum}, SYSDATE, #{comments}, #{fileName}, #{oriName})
</insert>
	
<!-- 데이터 삭제 -->	
<delete id="product_inquiry_delete" parameterType="String">
	DELETE FROM PRODUCTINQUIRY WHERE PROIN_IDX = #{proinIdx}
</delete>
	
<update id="product_inquiry_upadte" parameterType="ProductInquiryVO">
UPDATE PRODUCTINQUIRY
	SET PROIN_IDX = #{proinIdx},
		REGDATE = SYSDATE,
		COMMENTS = #{comments},
		ID = #{id},
		FILENAME = #{fileName}
		WHERE PROIN_IDX = #{proinIdx}
</update>

<!-- 게시글 1개 조회 -->
<select id="one" parameterType="int" resultType="RequestVO">
	SELECT REQUEST_IDX, SUBJECT, COMMENTS, ID, REGDATE, VIEWS, FILENAME, ORINAME, LIKE_CNT
       FROM REQUEST
       WHERE REQUEST_IDX = #{requestIdx}
</select>
	

<!-- 고객센터 mapper  -->
<select id="list4" resultType="GogakVO" parameterType="String" >
	SELECT INFO FROM GOGAK ORDER BY INFO DESC
</select>
	
<!-- 고객센터 해결책 mapper  -->
<select id="list5" resultType="Gogak_CommentVO" parameterType="String" >
	SELECT INFO FROM GOGAK_COMMENT ORDER BY INFO DESC
</select>

<!-- 태우님 끝 -->

<!-- 다은님 -->
	
	<!-- =================== 카테고리 ============================ -->
<select id="selectCategory" resultType="com.mystudy.house.model.vo.ProductVO">
SELECT CATEGORY_NUM, CATEGORY_NAME, CATEGORY_DETAIL FROM VW_CATEGORY
</select>


<!-- =================== 카테고리 상품 전체조회 =========================== -->
<select id="cateAllList" resultType="com.mystudy.house.model.vo.ProductVO">
SELECT CATEGORY_NUM, PARTNER_NUM, PRODUCT_NAME, PRODUCT_INFO, PRODUCT_PRICE,
		STOCK, SALES, CATEGORY_DETAIL, COMPANY_NAME, COMPANY_ADDR,
		COMPANY_PHONE, COMPANY_EMAIL, CRN, IMAGEFILE, CATEGORY_NAME,
		SHIPPING, PRODUCT_NUM
		FROM VW_PROIMG ORDER BY SALES DESC
</select>

<!-- =================== 카테고리번호로 상품 조회 =========================== -->
<select id="cateList" resultType="com.mystudy.house.model.vo.ProductVO">
SELECT CATEGORY_NUM, PARTNER_NUM, PRODUCT_NAME, PRODUCT_INFO, PRODUCT_PRICE,
		STOCK, SALES, CATEGORY_DETAIL, COMPANY_NAME, COMPANY_ADDR,
		COMPANY_PHONE, COMPANY_EMAIL, CRN, IMAGEFILE, CATEGORY_NAME,
		SHIPPING, PRODUCT_NUM
		FROM VW_PROIMG WHERE CATEGORY_NUM = #{categoryNum} ORDER BY SALES DESC
</select>

<!-- =================== 세부카테고리 조회 =========================== -->
<select id="cateDetail" resultType="com.mystudy.house.model.vo.ProductVO">
SELECT CATEGORY_NUM, PARTNER_NUM, PRODUCT_NAME, PRODUCT_INFO, PRODUCT_PRICE,
		STOCK, SALES, CATEGORY_DETAIL, COMPANY_NAME, COMPANY_ADDR,
		COMPANY_PHONE, COMPANY_EMAIL, CRN, IMAGEFILE, CATEGORY_NAME,
		SHIPPING, PRODUCT_NUM
		FROM VW_PROIMG WHERE CATEGORY_DETAIL = #{categoryDetail}
</select>

<!-- =================== 세부 카테고리번호로 상품 조회 =========================== -->
<select id="cateDtList" resultType="com.mystudy.house.model.vo.ProductVO">
SELECT CATEGORY_NUM, PARTNER_NUM, PRODUCT_NAME, PRODUCT_INFO, PRODUCT_PRICE,
		STOCK, SALES, CATEGORY_DETAIL, COMPANY_NAME, COMPANY_ADDR,
		COMPANY_PHONE, COMPANY_EMAIL, CRN, IMAGEFILE, CATEGORY_NAME,
		SHIPPING, PRODUCT_NUM
		FROM VW_PROIMG WHERE CATEGORY_DETAIL = #{categoryDetail} ORDER BY SALES DESC
</select>



<!-- =================== 상품카드 =========================== -->
<select id="selectCard" resultType="com.mystudy.house.model.vo.ProductVO">
SELECT PRODUCT_NUM, CATEGORY_NUM, PARTNER_NUM, PRODUCT_NAME, PRODUCT_INFO,
		PRODUCT_PRICE, STOCK, SALES, CATEGORY_DETAIL, IMAGEFILE,
		COMPANY_NAME, SHIPPING FROM VW_PROIMG
</select>



<!-- =================== 역대베스트 =========================== -->
<select id="mbestCard" resultType="com.mystudy.house.model.vo.ProductVO">
SELECT PRODUCT_NUM, CATEGORY_NUM, PARTNER_NUM, PRODUCT_NAME, PRODUCT_INFO,
		PRODUCT_PRICE, STOCK, SALES, CATEGORY_DETAIL, IMAGEFILE,
		COMPANY_NAME, SHIPPING FROM VW_PROIMG ORDER BY SALES DESC
</select>


<!-- =================== 실시간베스트 =========================== -->
<select id="tbestCard" resultType="com.mystudy.house.model.vo.ProductVO">
SELECT V.PRODUCT_NUM, V.IMAGEFILE, V.COMPANY_NAME,  V.PRODUCT_NAME,
V.PRODUCT_PRICE, V.SHIPPING,V.STOCK, SUM(COUNT) AS TCOUNT
FROM VW_PROIMG V INNER JOIN ORDER_ALL O
ON V.PRODUCT_NUM = O.PRODUCT_NUM
WHERE TO_CHAR(O.REGDATE, 'YYYYMMDD' ) = TO_CHAR(SYSDATE, 'YYYYMMDD')
GROUP BY V.PRODUCT_NUM, V.IMAGEFILE, V.COMPANY_NAME,  V.PRODUCT_NAME,
V.PRODUCT_PRICE, V.SHIPPING, V.STOCK
ORDER BY TCOUNT DESC
</select>


<!-- =================== 낮은가격순조회 =========================== -->
<select id="rowprice" resultType="com.mystudy.house.model.vo.ProductVO">
SELECT PRODUCT_NUM, CATEGORY_NUM, PARTNER_NUM, PRODUCT_NAME, PRODUCT_INFO,
		PRODUCT_PRICE, STOCK, SALES, CATEGORY_DETAIL, IMAGEFILE,
		COMPANY_NAME, SHIPPING FROM VW_PROIMG ORDER BY PRODUCT_PRICE
</select>


<!-- =================== 높은가격순조회 =========================== -->
<select id="highprice" resultType="com.mystudy.house.model.vo.ProductVO">
SELECT PRODUCT_NUM, CATEGORY_NUM, PARTNER_NUM, PRODUCT_NAME, PRODUCT_INFO,
		PRODUCT_PRICE, STOCK, SALES, CATEGORY_DETAIL, IMAGEFILE,
		COMPANY_NAME, SHIPPING FROM VW_PROIMG ORDER BY PRODUCT_PRICE DESC
</select>


<!-- =================== 상품번호로 상세페이지 조회 =========================== -->
<select id="pDetail" resultType="com.mystudy.house.model.vo.ProductVO">
SELECT CATEGORY_NUM, PARTNER_NUM, PRODUCT_NAME, PRODUCT_INFO, PRODUCT_PRICE,
		STOCK, SALES, CATEGORY_DETAIL, COMPANY_NAME, COMPANY_ADDR,
		COMPANY_PHONE, COMPANY_EMAIL, CRN, IMAGEFILE, CATEGORY_NAME,
		SHIPPING, PRODUCT_NUM
		FROM VW_PROIMG WHERE PRODUCT_NUM = #{productNum}
</select>
		


<!-- =================== 아이디로 프로필 조회 =========================== -->
<select id="profile" resultType="com.mystudy.house.model.vo.ProductVO">
SELECT CATEGORY_NUM, PARTNER_NUM, PRODUCT_NAME, PRODUCT_INFO, PRODUCT_PRICE,
		STOCK, SALES, CATEGORY_DETAIL, COMPANY_NAME, COMPANY_ADDR,
		COMPANY_PHONE, COMPANY_EMAIL, CRN, IMAGEFILE, CATEGORY_NAME,
		SHIPPING, PRODUCT_NUM
		FROM VW_PROIMG WHERE PRODUCT_NUM = #{productNum}
</select>		


<!-- =================== 아이디로 노하우 조회 =========================== -->
<select id="myKnowhow" parameterType="String" resultType="knowhowVO">
SELECT KNOWHOW_IDX, ID, SUBJECT, VIEWS, THUMBNAIL, LIKE_CNT, SCRAP_CNT FROM VW_KNOWHOW WHERE ID = #{id}
</select>

<!-- =================== 아이디로 사진글 조회 =========================== -->
<select id="myPicture" parameterType="String" resultType="PictureVO">
SELECT PICTURE_IDX, ID, THUMBNAIL, SCRAP_CNT, C1_CNT, C2_CNT, LIKE_CNT FROM VW_PICTURE WHERE ID = #{id}
</select>

<!-- =================== 아이디로 내가 쓴 질문 조회 =========================== -->
<select id="myRequest" parameterType="String" resultType="RequestVO">
SELECT REQUEST_IDX, ID, SUBJECT, REGDATE, COMMENTS,
FILENAME, ORINAME, VIEWS FROM REQUEST 
WHERE ID = #{id} ORDER BY REGDATE DESC
</select>

<!-- =================== 아이디로 내가 쓴 답변글 조회 =========================== -->
<select id="myAnswer" parameterType="String" resultType="RequestVO">
SELECT REQUEST_IDX, ID, SUBJECT, REGDATE, COMMENTS, VIEWS, MYID, FILENAME  FROM ANSWER
WHERE MYID = #{id}
GROUP BY REQUEST_IDX, ID, SUBJECT, REGDATE, COMMENTS, VIEWS, MYID, FILENAME 
</select>


<!-- =================== 카트에 담기 =========================== -->
<insert id="cartInsert" parameterType="com.mystudy.house.model.vo.CartVO">
INSERT INTO CART	
(CART_NUM, PRODUCT_NUM, ID, COUNT)
VALUES (SEQ_HOUSE.NEXTVAL, #{productNum}, #{id}, #{count})
</insert>


<!-- =================== 카트에서 보여주기 =========================== -->
<select id="cartView" parameterType="String" resultType="CartviewVO">
SELECT * FROM VW_CART WHERE ID = #{id}
</select>

<!-- =================== 카트 아이템 삭제 =========================== -->
<delete id="deleteCart" parameterType="String">
DELETE FROM CART WHERE PRODUCT_NUM = #{productNum}
</delete>


<!-- =================== 카트 수량 변경 =========================== -->
<update id="changeCart" parameterType="CartVO">
UPDATE CART SET COUNT = #{count} WHERE PRODUCT_NUM = #{productNum}
</update>


<!-- =================== 주문결제창 =========================== -->
<select id="orderView" parameterType="String" resultType="OrderCkVO">
SELECT * FROM VW_ORDERCK WHERE ID = #{id}
</select>


<!-- =================== 아이디로 스크랩모두 조회 =========================== -->
<select id="myscrap" parameterType="String" resultType="myscrapVO">
SELECT * FROM VW_MYSCRAP WHERE ID = #{id}
</select>

<!-- =================== 포스트타입으로 게시글 조회 =========================== -->
<select id="myscrapP" resultType="myscrapVO" parameterType="myscrapVO">
SELECT * FROM VW_MYSCRAP WHERE ID = #{id} AND POST_TYPE = #{postType}
</select>


<select id="selectOrderNum" resultType="int">
SELECT ORDER_SEQ.CURRVAL FROM dual
</select>

<!-- =================== 카트에 있던 상품 주문완료되면 넘기기(insert) =========================== -->
<insert id="orderpinsert" parameterType="com.mystudy.house.model.vo.OrderPVO">
    INSERT INTO ORDER_PRODUCT (ORDERP_NUM, ORDER_NUM, PRODUCT_NUM, COUNT, SHIPPING_STATUS, ID)
    VALUES
    (ORDERP_SEQ.NEXTVAL, #{orderNum}, #{productNum},#{count}, '결제완료', #{id})
   
</insert>

<!-- =================== 배송정보 넘기기(insert) =========================== -->
<insert id="orderInsert" parameterType="com.mystudy.house.model.vo.OrderVO">
INSERT INTO ORDERS	
(ORDER_NUM, ID, ORDER_NAME, ORDER_PHONE, ORDER_ADDR,
ORDER_REQUEST, TOT_PRICE, REGDATE, POINT_USE, PAYMENT_TYPE,
SHIPPING_STATUS, ADD_POINT)
VALUES (ORDER_SEQ.NEXTVAL, #{id}, #{orderName}, #{orderPhone}, #{orderAddr},
#{orderRequest}, #{totPrice}, SYSDATE, #{pointUse}, #{paymentType}, '결제완료', #{addPoint})
</insert>
	
	
	
	<!-- 나의 쇼핑 -->
	
	<!-- 전체 문의글 목록 조회 -->
	<select id="inquiryAllList" resultType="myinquiryVO">
		SELECT P.PRODUCT_NAME PRODUCT_NAME, I.REGDATE QDATE, 
			   I.COMMENTS CONTENTS, C.COMMENTS COMMENTS, 
			   C.REGDATE ADATE, T.COMPANY_NAME COMPANY_NAME
		FROM PRODUCT P, PRODUCTINQUIRY I, PRODUCTINQUIRY_COM C, PARTNER T
		WHERE P.PRODUCT_NUM = I.PRODUCT_NUM
		AND I.PROIN_IDX = C.PROIN_IDX
		AND C.PARTNER_NUM = T.PARTNER_NUM
		ORDER BY I.REGDATE DESC
	</select>
	
	<!-- 전체 문의글 수 조회 -->
	<select id="inquiryTotalCount" resultType="int">
		SELECT COUNT(*)
        FROM PRODUCTINQUIRY
        WHERE ID = #{id}
	</select>

	
	<!-- 페이지당 문의 목록 조회 -->
	<select id="inquiryListPage" parameterType="myinquirypageVO" resultType="myinquiryVO">
		SELECT *
		  FROM (SELECT ROWNUM R_NUM, P.*
		          FROM (SELECT P.PRODUCT_NAME PRODUCT_NAME, I.REGDATE QDATE, I.COMMENTS CONTENTS, I.PROIN_IDX PROIN_IDX
						FROM PRODUCT P, PRODUCTINQUIRY I
						WHERE I.ID = #{id}
						AND P.PRODUCT_NUM = I.PRODUCT_NUM
						ORDER BY I.REGDATE DESC
		                ) P
		       )
		 WHERE R_NUM BETWEEN #{begin} AND #{end}
	</select>
	
	<!-- 문의 목록 조회(아이디) -->
	<select id="inquiryList" parameterType="string" resultType="myinquiryVO">
		SELECT P.PRODUCT_NAME PRODUCT_NAME, I.REGDATE QDATE, I.COMMENTS CONTENTS, I.PROIN_IDX PROIN_IDX
		FROM PRODUCT P INNER JOIN PRODUCTINQUIRY I
			ON P.PRODUCT_NUM = I.PRODUCT_NUM
		WHERE I.ID = #{id}
		ORDER BY I.REGDATE DESC
	</select>
	
	<!-- 문의 답변 조회 -->
	<select id="inquiryComlist" parameterType="int"  resultType="myinquirycommentVO">
		SELECT C.COMMENTS COMMENTS, C.REGDATE ADATE, T.COMPANY_NAME COMPANY_NAME, C.PROIN_IDX PROIN_IDX
		FROM PRODUCTINQUIRY_COM C INNER JOIN PARTNER T
				ON C.PARTNER_NUM = T.PARTNER_NUM
		WHERE C.PROIN_IDX = #{proinIdx} 
	</select>

	<!-- 문의 삭제 -->
	<delete id="deleteInquiry" parameterType="int">
		DELETE FROM PRODUCTINQUIRY
		WHERE PROIN_IDX = #{proinIdx}
	</delete>
	
	<!-- 문의 답글 삭제 -->
	<delete id="deleteInquiryCom" parameterType="int">
		DELETE FROM PRODUCTINQUIRY_COM
		WHERE PROIN_IDX = #{proinIdx}
	</delete>

	<!-- 포인트 조회(아이디) -->
	<select id="myPoint" parameterType="string" resultType="int">
		SELECT POINT
		FROM MEMBERS
		WHERE ID = #{id}
	</select>

	<!-- 포인트 내역 조회(아이디) -->
	<select id="myPointList" parameterType="string" resultType="mypointVO">
		SELECT M.POINT POINT, O.ADD_POINT ADD_POINT, O.POINT_USE POINT_USE, 
				O.REGDATE REGDATE
		FROM ORDERS O INNER JOIN MEMBERS M
			ON M.ID = O.ID 
		WHERE M.ID = #{id}
		ORDER BY O.REGDATE DESC
	</select>
	
	<!-- 포인트 적립/사용 주문 상품 조회 -->
	<select id="myPointProduct" parameterType="int" resultType="String">
		SELECT PRODUCT_NAME
		FROM PRODUCT
		WHERE PRODUCT_NUM = (SELECT PRODUCT_NUM
								FROM ORDER_PRODUCT
								WHERE ORDER_NUM = #{orderNum}
								)
	</select>
	
	<!-- 회원 등급 조회 -->
	<select id="grade" parameterType="string" resultType="string">
		SELECT GRADE_NAME
        FROM GRADE
        WHERE GRADE_NUM = (SELECT GRADE_NUM
        					FROM MEMBERS
        					WHERE ID = #{id})
	</select>

	<!-- 최근 3개월 실적(구매 횟수) 조회 -->
	<select id="threeMonthOrderTimes" parameterType="myidperiodVO" resultType="int">
		SELECT COUNT(*)
        FROM ORDERS
        WHERE ID = #{id} 
        AND REGDATE BETWEEN #{ago} AND #{today}
	</select>
	
	<!-- 최근 3개월 실적(실결제 금액) 조회 -->
	<select id="threeMonthTotPrice" parameterType="myidperiodVO" resultType="int">
		SELECT SUM(TOT_PRICE)
        FROM ORDERS
        WHERE ID = #{id} 
        AND REGDATE BETWEEN #{ago} AND #{today}
	</select>

	<!-- 주문 내역 조회 -->
	<select id="orderList" parameterType="myidperiodVO" resultType="myorderlistVO">
		SELECT O.SHIPPING_STATUS SHIPPING_STATUS, O.ORDER_NUM ORDER_NUM, 
				T.COMPANY_NAME COMPANY_NAME, T.COMPANY_PHONE COMPANY_PHONE,
				T.SHIPPING SHIPPING, P.PRODUCT_NAME PRODUCT_NAME, 
				P.CATEGORY_DETAIL CATEGORY_DETAIL, O.REGDATE REGDATE, 
				OP.COUNT COUNT, P.PRODUCT_PRICE PRODUCT_PRICE, I.IMAGEFILE IMAGEFILE
		FROM ORDERS O INNER JOIN ORDER_PRODUCT OP
			ON O.ORDER_NUM = OP.ORDER_NUM
			INNER JOIN PRODUCT P
			ON OP.PRODUCT_NUM = P.PRODUCT_NUM
			INNER JOIN PARTNER T
			ON P.PARTNER_NUM = T.PARTNER_NUM
			INNER JOIN PRODUCT_IMG I
			ON I.PRODUCT_NUM = P.PRODUCT_NUM
		WHERE O.ID = #{id} 
        AND O.REGDATE BETWEEN #{ago} AND #{today}
        ORDER BY O.REGDATE DESC
	</select>
	
	
	<!-- 파트너 센터 -->
	
	<!-- 판매자 등급 조회 -->
	<select id="partnerAccess" parameterType="string" resultType="int">
		SELECT GRADE_NUM
        FROM MEMBERS
        WHERE ID = #{id}
	</select>
	
	<!-- 카테고리 조회 -->
	<select id="categoryList" resultType="CategoryVO">
		SELECT CATEGORY_NUM, CATEGORY_NAME
        FROM CATEGORY
	</select>
	
	<!-- 세부 카테고리 조회 -->
	<select id="categoryDetailList" parameterType="int" resultType="categoryDetailVO">
		SELECT CATEGORY_DETAIL_NUM, CATEGORY_NUM, CATEGORY_DETAIL
        FROM CATEGORY_DETAIL
        WHERE CATEGORY_NUM = #{categoryNum}
	</select>
	
	
	<!-- 상품 등록 -->
	<insert id="insertProduct" parameterType="productInsertVO">
		INSERT INTO PRODUCT
       	       (PRODUCT_NUM, CATEGORY_NUM, PARTNER_NUM, PRODUCT_NAME,
				PRODUCT_PRICE, STOCK, SALES, CATEGORY_DETAIL )
        VALUES (PRODUCT_NUM_SEQ.NEXTVAL, #{categoryNum}, #{partnerNum}, #{productName},
               #{productPrice}, #{stock}, 0, #{categoryDetail})
	</insert>
	<!-- 상품 번호 조회 -->
	<select id="productNum" parameterType="string" resultType="int">
		SELECT PRODUCT_NUM
        FROM PRODUCT
        WHERE PRODUCT_NAME = #{productName}
	</select>
	
	<!-- 상품 대표 이미지 등록-->
	<insert id="insertProductImg" parameterType="productInsertImgVO">
		INSERT INTO PRODUCT_IMG
       	       (PIMG_IDX, PRODUCT_NUM, IMAGEFILE)
        VALUES (PIMG_IDX_SEQ.NEXTVAL, #{productNum}, #{imagefile})
	</insert>
	
	<!-- 상품 상세 이미지 등록-->
	<update id="insertProductInfoImg" parameterType="productInsertInfoImgVO">
		UPDATE PRODUCT
			SET PRODUCT_INFO = #{productInfo}
		WHERE PRODUCT_NUM = #{productNum}
	</update>
	
	<!-- 판매자 번호 조회 -->
	<select id="partnerNum" parameterType="string" resultType="int">
		SELECT PARTNER_NUM
        FROM PARTNER
        WHERE ID = #{id}
	</select>
	
	<!-- 상품 조회 (전체) -->
	<select id="productListAll" parameterType="string" resultType="productListVO">
		SELECT P.PRODUCT_NUM PRODUCT_NUM, C.CATEGORY_NAME CATEGORY_NAME, D.CATEGORY_DETAIL CATEGORY_DETAIL, 
        		P.PRODUCT_NAME PRODUCT_NAME, P.STOCK STOCK, P.PRODUCT_PRICE PRODUCT_PRICE
		FROM PRODUCT P INNER JOIN CATEGORY C
   			ON P.CATEGORY_NUM = C.CATEGORY_NUM
    		INNER JOIN CATEGORY_DETAIL D
    		ON P.CATEGORY_DETAIL = D.CATEGORY_DETAIL
		WHERE P.PARTNER_NUM = (SELECT PARTNER_NUM
					            FROM PARTNER
					            WHERE ID = #{id})
		AND P.DEL IS NULL
		ORDER BY P.PRODUCT_NUM DESC 			            
	</select>
	<!-- 상품 조회 결과 (전체) -->
	<select id="productListCount" parameterType="string" resultType="int">
		SELECT COUNT(*)
		FROM PRODUCT
		WHERE PARTNER_NUM = (SELECT PARTNER_NUM
					            FROM PARTNER
					            WHERE ID = #{id})
		AND DEL IS NULL
		ORDER BY PRODUCT_NUM DESC 			            
	</select>
	<!-- 상품 조회 (카테고리) -->
	<select id="productListCategory" parameterType="productListCategoryVO" resultType="productListVO">
		SELECT P.PRODUCT_NUM PRODUCT_NUM, C.CATEGORY_NAME CATEGORY_NAME, D.CATEGORY_DETAIL CATEGORY_DETAIL, 
        		P.PRODUCT_NAME PRODUCT_NAME, P.STOCK STOCK, P.PRODUCT_PRICE PRODUCT_PRICE
		FROM PRODUCT P INNER JOIN CATEGORY C
   			ON P.CATEGORY_NUM = C.CATEGORY_NUM
    		INNER JOIN CATEGORY_DETAIL D
    		ON P.CATEGORY_DETAIL = D.CATEGORY_DETAIL_NUM
		WHERE P.PARTNER_NUM = (SELECT PARTNER_NUM
					            FROM PARTNER
					            WHERE ID = #{id})
		AND P.CATEGORY_DETAIL = #{categoryDetail}
	</select>
	
	<!-- 상품 조회 (수정 전) -->
	<select id="productUpdateList" parameterType="int" resultType="productUpdateListVO">
		SELECT P.CATEGORY_NUM CATEGORY_NUM, P.PRODUCT_NAME PRODUCT_NAME, P.PRODUCT_PRICE PRODUCT_PRICE, 
		P.STOCK STOCK, P.CATEGORY_DETAIL CATEGORY_DETAIL, P.PRODUCT_NUM PRODUCT_NUM
		FROM PRODUCT P INNER JOIN PRODUCT_IMG I
			ON P.PRODUCT_NUM = I.PRODUCT_NUM
        WHERE P.PRODUCT_NUM = #{productNum}
	</select>
	
	<!-- 상품 수정 -->
	<update id="updateProduct" parameterType="productUpdateListVO">
		UPDATE PRODUCT
   	       SET CATEGORY_NUM = #{categoryNum}, 
				PRODUCT_NAME = #{productName},
				PRODUCT_PRICE = #{productPrice}, 
				STOCK = #{stock}, 
				CATEGORY_DETAIL = #{categoryDetail}
        WHERE PRODUCT_NUM = #{productNum}
	</update>
	<!-- 상품 재고 수정 -->
	<update id="updateProductStock" parameterType="productUpdatestockVO">
		UPDATE PRODUCT
   	       SET STOCK = #{stock}
        WHERE PRODUCT_NUM = #{productNum}
	</update>
	<!-- 상품 삭제 -->
	<update id="deleteProduct" parameterType="deleteStatusVO">
		UPDATE PRODUCT
   	       SET DEL = #{del}
        WHERE PRODUCT_NUM = #{productNum}
	</update>	
	
	
	
	
</mapper>